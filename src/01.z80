.org $4000
#define scrap 8000h
#include "gfx/bigtile.z80"
#include "isort.z80"
drawrect:
#include "gfx/drawrect.z80"
#include "math/rand_single.z80"
#include "math/atanbin.z80"
#include "gfx/filledcircle.z80"

call_ix_01:
  jp (ix)


#include "absSingle.z80"
#include "negSingle.z80"
#include "cmpSingle.z80"

#include "randSingle.z80"

#include "acosSingle.z80"
#include "asinSingle.z80"
#include "atanSingle.z80"
#include "acoshSingle.z80"
#include "asinhSingle.z80"
#include "atanhSingle.z80"
#include "coshSingle.z80"
#include "sinhSingle.z80"
#include "tanhSingle.z80"
#include "tanSingle.z80"


#include "powSingle.z80"
#include "pow10Single.z80"
#include "logSingle.z80"
#include "lgSingle.z80"
#include "log10Single.z80"

#include "single2str.z80"
#include "str2single.z80"
#include "singleTo_int16.z80"


#ifdef INCLUDE_GRAMPKG
grampkg_start:
#define EXCLUDE_GRAMPKG_INC
#include "grampkg.z80"
grampkg_end:
#endif

menu_code_start:
#include "cmd/menu.z80"

#include "io/getKeyChar.z80"
#include "io/getKeyTok.z80"
#include "io/input.z80"
#include "io/menu.z80"
#include "io/sound.z80"

p1_PutTokenText:
  ld bc,PutTokenText
  ld (prev_page_call_address),bc
  jp prev_page_call

p1_GraphToLCD:
  ld hl,GraphToLCD
  ld (prev_page_call_address),hl
  jp prev_page_call

p1_ParseFullArg:
  ld hl,ParseFullArg
  ld (prev_page_call_address),hl
  jp prev_page_call

p1_ParseNextFullArg:
  ld hl,ParseNextFullArg
  ld (prev_page_call_address),hl
  jp prev_page_call

p1_ParserNext:
  ld hl,ParserNext
  ld (prev_page_call_address),hl
  jp prev_page_call

p1_getKeyDebounce:
  push hl
  ld hl,getKeyDebounce
  ld (prev_page_call_address),hl
  pop hl
  jp prev_page_call

.echo "Page 1: ",$8000-$," bytes remaining"
