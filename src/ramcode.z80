RAMCodeStart:
  push af
  nop
  or (hl)
  ld (hl),a
  pop af
  ret
L7151:
  push hl
  push af
  ld a,0
  dec a
  jr L7171
L7158:
  ld a,$80
  xor (iy+InternalFlag)
  ld (iy+InternalFlag),a
  ld hl,$811a
_:
  ld a,(ix-1)
  inc a
  jr nz,+_
  ld (hl),0
  jr -_
_:
  dec (hl)
  dec a
  jr z,L7158
L7171:
  ld ($8109),a
  pop af
  pop hl
  ret
;SetLinePixCode:
; push af   ; Saving A
; ld a,(ix+0)
; cpl
; xor c   ; Writing pixel to current position
; nop
; ld (ix+0),a
; pop af   ; Recalling A
; ret

_:
IncHLMem1 = -_-RAMCodeStart+ramCode
  inc h
  ret po
  ld h,a
  in a,(6)
  inc a
  out (6),a
  ld a,h
  ld h,40h
  ret
_:
call_previous_page = -_-RAMCodeStart+ramCode
  ld (de_restore),de
  ex (sp),hl
  ld e,(hl)
  inc hl
  ld d,(hl)
  inc hl      ;the return address
  ld (page0_call),de
  ex (sp),hl
  push af
  in a,(6)
  inc a
  out (6),a
  pop af
de_restore = $-RAMCodeStart+ramCode+1
  ld de,0
page0_call = $-RAMCodeStart+ramCode+1
  call 0
  push af
  in a,(6)
  dec a
  out (6),a
  pop af
  ret
_:
call_next_page = -_-RAMCodeStart+ramCode
  ld (de_restore_),de
  ex (sp),hl
  ld e,(hl)
  inc hl
  ld d,(hl)
  inc hl      ;the return address
  ld (page1_call),de
  ex (sp),hl
  push af
  in a,(6)
  dec a
  out (6),a
  pop af
de_restore_ = $-RAMCodeStart+ramCode+1
  ld de,0
page1_call = $-RAMCodeStart+ramCode+1
  call 0
  push af
  in a,(6)
  inc a
  out (6),a
  pop af
  ret
_:
next_page_call = -_-RAMCodeStart+ramCode
;121cc
  push af
  in a,(6)
  inc a
  out (6),a
  pop af

  push af
  in a,(6)
  dec a
  out (6),a
  pop af
next_page_call_address = $-RAMCodeStart+ramCode+1
  call 0
  push af
  in a,(6)
  inc a
  out (6),a
  pop af
  ret
_:
prev_page_call = -_-RAMCodeStart+ramCode
;121cc
  push af
  in a,(6)
  inc a
  out (6),a
prev_page_call_address = $-RAMCodeStart+ramCode+1
  call 0
  in a,(6)
  dec a
  out (6),a
  ret
_:
bincompare = -_-RAMCodeStart+ramCode
  ld de,(parsePtr)
  out (6),a
  .db $FE   ;start of cp *
_:
  inc de
  ld a,(de)
  cp (hl)
  jr nz,+_
  call isEOT
  jr z,+_
  inc l \ call z,incHLMem1
  ld a,(hl)
  or a
  jr nz,-_
_:
  in a,(6)
  ld b,a
;  push af
_:
bincomparepagerestore = -_-RAMCodeStart+ramCode+1
  ld a,0
  out (6),a
;  pop af
  ld a,b
  ret
isEOT    = $-RAMCodeStart+ramCode
;End Of Token includes (, ' ', {, [, \n, :
  or a \ ret z
  cp $10 \ ret z  ;(
  cp $29 \ ret  ;space
RamCodeEnd:
.echo "RamCode : ",$-RamCodeStart
;=============================================================================
