PutSS:
  ld d,a
  jr GPutS+2
GPutSS:
  ld (textRow),bc
;===============================================================
GPutS:
;===============================================================
;Inputs:
;     HL points to a zero terminated string to display
;     (textRow) is the pixel row to draw at
;     (textCol) is the text column to draw at (0 to 23)
;Outputs:
;     HL points to the ending byte
;     BC is the size of the string
;     A is 0
;     z flag is set
;     c flag reset
;Destroys:
;     DE
;===============================================================
  ld d,0    ;gotta keep this here for PutSS
  ld bc,0
_:
  ld a,(hl)
  cp d
  ret z
  push de
  inc bc
  push bc
  inc hl
  push hl
  call PutSC
  pop hl
  pop bc
  pop de
  jr -_
;===============================================================
PutSC:
;===============================================================
;Inputs:
;     a is the char to draw
;     (textRow) is the pixel row to draw at
;     (textCol) is the text column to draw at (0 to 23)
;===============================================================
  ld b,a
  ld a,(GrayRotate)
  and 18h
  jp z,+_
  cp 8
  jp z,VPutC
  cp 10h
  jp z,VPutSC
  cp 18h
  jp z,OmniCalcFont
_:
  push bc
  ld bc,(textRow)
  ld a,b
  cp 24
  ld a,c
  jr c,+_
  ld b,0
  add a,6
_:
  cp 3Bh
  jr c,+_
  sub 3Ch
  jr nc,+_
  add a,6
_:
  ld c,a
  inc b
  ld (textRow),bc
  dec b
  ld hl,(FontPointer)
  pop af
;===============================================================
PutFS:
;===============================================================
  push bc
  push hl
  ld b,0
  ld c,a
  ld h,b
  ld l,c
  add hl,hl
  add hl,bc
  pop de
  add hl,de
  pop bc
  push hl
  ld a,b
  ld b,0
  ld h,b
  ld l,c
  add hl,hl
  add hl,bc
  add hl,hl
  add hl,hl
  rra
  push af
  ld c,a
  add hl,bc
  ld bc,(BufPtr)
  add hl,bc
  ld bc,060Ch
;==========================================
;Added in for slow text
  bit SlowTextFlag,(iy+InternalFlag)
  jr z,SkipSlow
  push bc
  push hl
  call GraphToLCD
  pop hl
  pop bc
  ld a,(TextPauseTime)
  ei
_:
  halt
  dec a
  jr nz,-_
  di
SkipSlow:
;==========================================
  pop af
  pop de
  jr c,PutRight
;===============================================================
PutLeft:
;===============================================================
  ld a,(hl)
  and 15
  ld (hl),a
  ld a,(de)
  bit InvertTextFlag,(iy+UserFlags)
  jr z,+_
  cpl
_:
  bit 0,b
  jr z,+_
  rlca \ rlca \ rlca \ rlca
  inc de
_:
  and $F0
  or (hl)
  ld (hl),a
  ld a,b
  ld b,0
  add hl,bc
  ld b,a
  djnz PutLeft
  ret
;===============================================================
PutRight:
;===============================================================
  ld a,(hl)
  and $F0
  ld (hl),a
  ld a,(de)
  bit InvertTextFlag,(iy+UserFlags)
  jr z,+_
  cpl
_:
  bit 0,b
  jr nz,+_
  rlca \ rlca \ rlca \ rlca
  dec de
_:
  inc de
  and 15
  or (hl)
  ld (hl),a
  ld a,b
  ld b,0
  add hl,bc
  ld b,a
  djnz PutRight
  ret
